// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Biblioteca.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Biblioteca.DataAccess.Context
{
    public partial class DB_BibliotecaContext : DbContext
    {
        public DB_BibliotecaContext()
        {
        }

        public DB_BibliotecaContext(DbContextOptions<DB_BibliotecaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Pantallas> Pantallas { get; set; }
        public virtual DbSet<PantallasPorRol> PantallasPorRol { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<Clientes>(entity =>
            {
                entity.ToTable("Clientes", "gene");

                entity.HasIndex(e => e.Telefono, "UQ__Clientes__4EC5048061C3CA0A")
                    .IsUnique();

                entity.HasIndex(e => e.Email, "UQ__Clientes__A9D10534B1D81925")
                    .IsUnique();

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Pantallas>(entity =>
            {
                entity.ToTable("Pantallas", "acce");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Icono)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.Menu)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<PantallasPorRol>(entity =>
            {
                entity.ToTable("PantallasPorRol", "acce");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Pantalla)
                    .WithMany(p => p.PantallasPorRol)
                    .HasForeignKey(d => d.PantallaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_PantallasPorRol_Pantalla");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.PantallasPorRol)
                    .HasForeignKey(d => d.RolId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_PantallasPorRol_Rol");
            });

            modelBuilder.Entity<Productos>(entity =>
            {
                entity.ToTable("Productos", "gene");

                entity.HasIndex(e => e.Nombre, "UQ__Producto__75E3EFCF94ED98F6")
                    .IsUnique();

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PrecioCompra).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecioVenta).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<Roles>(entity =>
            {
                entity.ToTable("Roles", "acce");

                entity.HasIndex(e => e.Nombre, "UQ__Roles__75E3EFCF86D206F3")
                    .IsUnique();

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Habilitado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Usuarios>(entity =>
            {
                entity.ToTable("Usuarios", "acce");

                entity.Property(e => e.Contrasena)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.EsAdmin).HasDefaultValueSql("((0))");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.UrlFoto).HasMaxLength(500);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.RolId)
                    .HasConstraintName("FK_acce_Usuarios_Rol");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}